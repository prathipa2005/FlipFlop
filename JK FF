module JK_FF(input clk,reset,j,k,output reg q,qbar);
always @ (posedge clk or posedge reset)
begin
if(reset)
begin
q<=0;
qbar<=1;
end
else
begin
case({j,k})
2'b00:
begin
q<=q;
qbar<=~q;
end
2'b01:
begin
q<=1'b0;
qbar<=1'b1;
end
2'b10:
begin
q<=1'b1;
qbar<=1'b0;
end
2'b11:
begin
q<=~q;
qbar<=~qbar;
end
endcase
end
end
endmodule

module JK_FF_tb;
reg j,k,reset,clk;
wire q,qbar;
JK_FF uut (.j(j),.k(k),.reset(reset),.clk(clk),.q(q),.qbar(qbar));
always #5 clk=~clk;
initial begin
clk=1'b0;
reset=1'b1;j=1'b1;k=1'b0;#10;
reset=1'b0;
j=1'b0;k=1'b0;#10;
j=1'b0;k=1'b1;#10;
j=1'b1;k=1'b0;#10;
j=1'b1;k=1'b1;#10;
$stop;
end
endmodule
